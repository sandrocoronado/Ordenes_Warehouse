DELIMITER $$
CREATE PROCEDURE ETL_DIM_EMPLOYEES()
BEGIN
-- VARIABLES GENERALES
DECLARE V_NOMBRE_PROCESO VARCHAR(30) DEFAULT 'ETL_DIM_EMPLOYEES';
DECLARE V_FEC_INICIO DATE;
DECLARE V_FEC_FIN DATE;
DECLARE V_COMENTARIO VARCHAR(255);
DECLARE V_CANT_REG INT DEFAULT 0;
DECLARE V_CORRECTO CHAR(1) DEFAULT 'N'; -- INDICADOR DE QUE SI EL PROCESO ESTA CORRECTO O NO
-- VARIABLES DEL PROCESO
DECLARE v_total_diferencias INT DEFAULT 0;

SET v_fec_inicio := SYSDATE();

-- CODIGO DEL PROCESO
INSERT INTO STAR_O.DIM_EMPLOYEES (IDW_EMPLOYEES,ID_EMPLOYEE,LASTNAME,FIRSTNAME,TITLE,TITLEOFCOURTESY,BIRTHDATE,HIREDATE,ADDRESS,CITY,REGION,POSTALCODE,COUNTRY,HOMEPHONE,EXTENSION,NOTES,REPORTSTO,STAR_DATE,END_DATE,CURRENT_FLAG,LOGIN_USER_DW)
SELECT SEQ_IDW_EMPL.NEXTVAL IDW_EMPLOYEES,ID_EMPLOYEE,LASTNAME,FIRSTNAME,TITLE,TITLEOFCOURTESY,BIRTHDATE,HIREDATE,ADDRESS,CITY,REGION,POSTALCODE,COUNTRY,HOMEPHONE,EXTENSION,NOTES,REPORTSTO,SYSDATE() STAR_DATE,SYSDATE() END_DATE, 1 CURRENT_FLAG, LOGIN_USER_DW
FROM STG_DIM_EMPLOYEES
WHERE IDW_EMPLOYEES = -1;
SET V_CANT_REG := ROW_COUNT();

UPDATE STAR_O.DIM_EMPLOYEES DE
JOIN (SELECT IDW_EMPLOYEES, ID_EMPLOYEE, LASTNAME, FIRSTNAME, TITLE, TITLEOFCOURTESY, BIRTHDATE, HIREDATE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, HOMEPHONE, EXTENSION, NOTES, REPORTSTO)
FROM STG_DIM_EMPLOYEES 
MINUS
SELECT IDW_EMPLOYEES, ID_EMPLOYEE, LASTNAME, FIRSTNAME, TITLE, TITLEOFCOURTESY, BIRTHDATE, HIREDATE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, HOMEPHONE, EXTENSION, NOTES, REPORTSTO
FROM STAR_O.DIM_EMPLOYEES) STG ON DE.IDW_EMPLOYEES = STG.IDW_EMPLOYEES
SET DE.ID_EMPLOYEE = STG.ID_EMPLOYEE,
DE.LASTNAME = STG.LASTNAME,
DE.FIRSTNAME = STG.FIRSTNAME,
DE.TITLE = STG.TITLE,
DE.TITLEOFCOURTESY = STG.TITLEOFCOURTESY,
DE.BIRTHDATE = STG.BIRTHDATE,
DE.HIREDATE = STG.HIREDATE,
DE.ADDRESS = STG.ADDRESS,
DE.CITY = STG.CITY,
DE.REGION = STG.REGION,
DE.POSTALCODE = STG.POSTALCODE,
DE.COUNTRY = STG.COUNTRY,
DE.HOMEPHONE = STG.HOMEPHONE,
DE.EXTENSION = STG.EXTENSION,
DE.NOTES = STG.NOTES;
SET v_total_diferencias := ROW_COUNT();
  BEGIN
  DECLARE  v_fec_inicio TIMESTAMP;
  DECLARE v_fec_fin TIMESTAMP;
  DECLARE V_NOMBRE_PROCESO VARCHAR(30) DEFAULT 'NOMBRE DEL PROCESO';
  DECLARE V_CANT_REG INT DEFAULT 0;
  DECLARE v_total_diferencias INT DEFAULT 0;
  DECLARE v_comentario VARCHAR(500);
  DECLARE v_correcto CHAR(1);
BEGIN
SET v_fec_inicio := SYSDATE();

  -- CÓDIGO DEL PROCESO AQUÍ

 SET v_fec_inicio := SYSDATE();
  SET v_comentario := CONCAT('EL PROCESO ', v_nombre_proceso, ' ESTA OK ACTUALIZADOS: ', v_total_diferencias, ' NUEVOS: ', v_cant_reg);
  SET v_correcto := 'S';

  CALL P_Insertar_Info_Proc(v_nombre_proceso,
                            v_fec_inicio,
                            v_fec_fin,
                            v_comentario,
                            v_cant_reg,
                            v_correcto );
  COMMIT;


 BEGIN
    DECLARE exit handler for SQLEXCEPTION
      BEGIN
        SET v_fec_fin := SYSDATE();
        SET v_comentario := CONCAT('ERROR AL ACTUALIZAR ', v_nombre_proceso, ' ', SQLCODE, ' ', SQLERRM);
        SET v_correcto := 'N';

        CALL P_Insertar_Info_Proc(v_nombre_proceso, v_fec_inicio, v_fec_fin, v_comentario, v_cant_reg, v_correcto);
        COMMIT;
      END;
  END;
  END;
  DELIMITER //

